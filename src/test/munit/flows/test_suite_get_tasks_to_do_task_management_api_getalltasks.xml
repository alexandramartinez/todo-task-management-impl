<?xml version="1.0" ?>
<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="     http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd     http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd     http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd     http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
  <munit:config name="test_suite_get_tasks_to_do_task_management_api_getalltasks.xml"/>
  <munit:test name="test_suite_get_tasks_to_do_task_management_api_0" description="Happy path scenario for retrieving all tasks via the get:\tasks:to-do-task-management-api-config flow, ensuring all components and connectors are covered, including the referenced get-all-tasks-flow.">
    <!-- Set up the behavior for the test -->
    <munit:behavior>
      <!-- Mock the database select operation to return a predefined list of tasks -->
      <munit-tools:mock-when processor="db:select">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute attributeName="doc:name" whereValue="Select Tasks"/>
          <munit-tools:with-attribute attributeName="config-ref" whereValue="mysql-db-config"/>
        </munit-tools:with-attributes>
        <munit-tools:then-return>
          <munit-tools:payload value="#[MunitTools::getResourceAsString('test_suite_get_tasks_to_do_task_management_api_getalltasks/mock_data_scenario_0/db-select-response.json')]" mediaType="application/json" encoding="UTF-8"/>
        </munit-tools:then-return>
      </munit-tools:mock-when>
    </munit:behavior>
    <!-- Execute the flow with the set event -->
    <munit:execution>
      <munit:set-event doc:name="Set Event with Query Parameters">
        <munit:attributes value="#[{                 'queryParams': {                     'completed': true,                     'dueDate': '2024-07-01'                 }             }]" mediaType="application/java" encoding="UTF-8"/>
      </munit:set-event>
      <flow-ref name="get:\tasks:to-do-task-management-api-config" doc:name="Flow Reference"/>
    </munit:execution>
    <!-- Validate the results -->
    <munit:validation>
      <!-- Verify that the logger in the main flow is called -->
      <munit-tools:verify-call processor="logger" doc:name="Verify Main Flow Logger" times="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute attributeName="message" whereValue="get:\tasks:to-do-task-management-api-config"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify that the logger at the start of get-all-tasks-flow is called -->
      <munit-tools:verify-call processor="logger" doc:name="Verify Start Logger" times="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute attributeName="doc:name" whereValue="Start - Get All Tasks"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify that the database select connector is called -->
      <munit-tools:verify-call processor="db:select" doc:name="Verify DB Select" times="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute attributeName="doc:name" whereValue="Select Tasks"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Verify that the logger at the end of get-all-tasks-flow is called -->
      <munit-tools:verify-call processor="logger" doc:name="Verify End Logger" times="1">
        <munit-tools:with-attributes>
          <munit-tools:with-attribute attributeName="doc:name" whereValue="End - Get All Tasks"/>
        </munit-tools:with-attributes>
      </munit-tools:verify-call>
      <!-- Assert that the final payload matches the expected transformed API response format -->
      <munit-tools:assert-that doc:name="Assert Payload Format" expression="#[payload]" is="#[MunitTools::equalTo(read(MunitTools::getResourceAsString('test_suite_get_tasks_to_do_task_management_api_getalltasks/mock_data_scenario_0/expected-response.json'), 'application/json'))]"/>
    </munit:validation>
  </munit:test>
</mule>